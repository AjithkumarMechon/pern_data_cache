import type { Metadata } from "next";
import "./globals.css";
import TanstackQueryProvider from "@/tanstack/tanstack.provider";
import { Toaster } from "react-hot-toast";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";

export const metadata: Metadata = {
  title: "AK",
  description: "Generated by create next app",
};

type LayoutProps = {
  children?: React.ReactNode;
  params?: Promise<{ locale: string }>;
};

// Async server component to load messages
async function IntlProviderWrapper({
  locale,
  children,
}: {
  locale: string;
  children?: React.ReactNode;
}): Promise<any> {
  const messagesModule = await import(`../../../messages/${locale}.json`);
  const messages = messagesModule.default;

  return (
    <NextIntlClientProvider locale={locale} messages={messages}>
      {children}
    </NextIntlClientProvider>
  );
}

export default async function RootLayout({
  children,
  params,
}: LayoutProps): Promise<any> {
  if (!params) {
    notFound();
  }

  // Await the params promise
  const resolvedParams = await params;
  const { locale } = resolvedParams;

  // Validate locale
  if (!locale || !hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body>
        <Toaster />
        <IntlProviderWrapper locale={locale}>
          <TanstackQueryProvider>{children}</TanstackQueryProvider>
        </IntlProviderWrapper>
      </body>
    </html>
  );
}
