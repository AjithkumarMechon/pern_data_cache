import "./globals.css";
import type { Metadata } from "next";
import TanstackQueryProvider from "@/tanstack/tanstack.provider";
import { Toaster } from "react-hot-toast";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { routing } from "@/i18n/routing";
import { cookies } from "next/headers";
import ReduxProvider from "@/redux/ClientProvider/ReduxProvider";
import { notFound } from "next/navigation";

export const metadata: Metadata = {
  title: "AK",
  description: "Generated by create next app",
};

async function IntlProviderWrapper({
  locale,
  children,
}: {
  locale: string;
  children?: React.ReactNode;
}) {
  const messagesModule = await import(`../../../messages/${locale}.json`);
  const messages = messagesModule.default;
  return (
    <NextIntlClientProvider locale={locale} messages={messages}>
      {children}
    </NextIntlClientProvider>
  );
}

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const { locale } = await params;

  if (!locale || !hasLocale(routing.locales, locale)) {
    notFound;
  }
  const cookieStore = await cookies();
  const theme = cookieStore.get("theme")?.value || "light";

  return (
    <html lang={locale} data-theme={theme}>
      <body>
        <Toaster />
        <IntlProviderWrapper locale={locale}>
          <TanstackQueryProvider>
            <ReduxProvider>{children}</ReduxProvider>
          </TanstackQueryProvider>
        </IntlProviderWrapper>
      </body>
    </html>
  );
}
